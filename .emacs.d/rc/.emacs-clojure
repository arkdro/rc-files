;; vim: ft=lisp
;; Lisp mode

(setq exec-path (cons "/usr/local/lein/bin" exec-path))

(add-to-list 'auto-mode-alist '("\\.clj$" .
        (lambda ()
                ;; add major mode setting here, if needed, for example:
                ;; (text-mode)
                (require 'clojure-mode)
                ;(require 'clojure-test-mode)
                (clojure-mode)
                ;(print major-mode) ; gives 'clojure-mode'
                ;(set-hist-file "clojure")
                )))
;; try symbol at point first, and ask if not found
(setq cider-prompt-for-symbol nil)

(add-hook 'clojure-mode-hook
    (lambda ()
        ;; doesn't help
        ;(add-hook 'kill-buffer-hook 'comint-write-input-ring nil t)
        ;(setq comint-input-ring-file-name "~/.clojure_emacs_history")
        ;(setq comint-input-ignoredups t)
        ;(comint-read-input-ring t)
        ;; for search:
        (modify-syntax-entry ?_ "w")
        ;; for auto highlight symbol at point
        (highlight-symbol-mode 1)
    ))

;; syntax highlight of function calls
(add-hook 'clojure-mode-hook
    (lambda ()
        (font-lock-add-keywords
            nil
            '(("(\\(\\w+\\)\\(\\s-\\|$\\)" 1 font-lock-keyword-face)))
        (font-lock-add-keywords
            nil
            '(("(\\([[:word:]]+\\)/\\([[:word:]]+\\)\\(\\s-\\|$\\)"
                (1 font-lock-type-face)
                (2 font-lock-keyword-face) )))
    ))

(add-hook 'cider-mode-hook
    (lambda ()
        (setq cider-prompt-for-symbol nil)
))
